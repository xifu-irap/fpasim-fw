name: Linty
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  linty:
    name: Linty
    timeout-minutes: 100
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: ${{vars.LINTY_CLOUD_URL}}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git Checkout Third-Party Libraries
        uses: actions/checkout@v3
        with:
          repository: xifu-irap/third-party-libraries-for-linty
          fetch-depth: 0
          token: ${{ secrets.THIRD_PARTY_LIBRARIES_TOKEN }}
          path: ./third-party-libraries

      - name: Create the 3rd party library directory
      - run: mkdir -p ./third-party-libraries/ip/

      - name: Get Libraries
        run: mv ./third-party-libraries/fpasim-fw/* ./third-party-libraries/ip/

      - name: Cache
        uses: actions/cache@v3.3.0
        with:
          path: ~/.sonar/cache
          key: sonar
          restore-keys: sonar

      - name: Set Linty Analysis parameters
        uses: haya14busa/action-cond@v1.1.1
        id: linty_analysis_parameters
        with:
          cond: ${{ github.event.pull_request.number != '' }}
          if_true: -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} -Dsonar.pullrequest.base=${{ github.base_ref }} -Dsonar.pullrequest.branch=${{ github.head_ref }}
          if_false: -Dsonar.branch.name=${GITHUB_REF#refs/*/}

      - name: Run Linty
        run: |
          docker run \
            --rm \
            -e SONAR_HOST_URL=${{ env.SONAR_HOST_URL }} \
            -e SONAR_TOKEN="${{ secrets.LINTY_SCANNER_TOKEN }}" \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            -e GITHUB_REPOSITORY_OWNER="$GITHUB_REPOSITORY_OWNER" \
            -e GITHUB_REPOSITORY="$GITHUB_REPOSITORY" \
            -e TABBY_CAD_LICENSE="$TABBY_CAD_LICENSE" \
            -v "$PWD:/usr/src" \
            lintyservices/linty-scanner:beta \
            -Dsonar.qualitygate.wait=true ${{ steps.linty_analysis_parameters.outputs.value }}
        env:
          TABBY_CAD_LICENSE: ${{ secrets.TABBY_CAD_LICENSE }}

      - name: Debug
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debug
          path: |
            ./bugfinder_workdir/